<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown 语法</title>
      <link href="/2023/04/27/markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/04/27/markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Markdown-语法"><a href="#Markdown-语法" class="headerlink" title="Markdown 语法"></a>Markdown 语法</h1><p><strong>这是一篇使用Markdown语法的文章。Markdown语法是一种用于排版、格式化和编写文档的轻量级标记语言，被广泛应用于各种场合，如博客、文档、论坛等。</strong></p><h2 id="标题和段落"><a href="#标题和段落" class="headerlink" title="标题和段落"></a>标题和段落</h2><p>在Markdown中，可以使用井号（#）来表示标题。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br></pre></td></tr></table></figure><p>可以得到以下效果：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h2 id="段落可以直接用文本表示，也可以在段落前后加上一个或多个换行符。例如："><a href="#段落可以直接用文本表示，也可以在段落前后加上一个或多个换行符。例如：" class="headerlink" title="段落可以直接用文本表示，也可以在段落前后加上一个或多个换行符。例如："></a>段落可以直接用文本表示，也可以在段落前后加上一个或多个换行符。例如：</h2><p>这是一个段落。</p><p>这是另一个段落。<br>可以得到以下效果：</p><p>这是一个段落。</p><p>这是另一个段落。</p><h2 id="强调和斜体"><a href="#强调和斜体" class="headerlink" title="强调和斜体"></a>强调和斜体</h2><p>在Markdown中，可以使用星号（*）或下划线（_）来表示强调和斜体。例如：</p><p>这个词是 <em>斜体</em>，这个词是 <code>**粗体**</code>，这个词是 <code>***斜粗体***</code>。<br>可以得到以下效果：<br> <em>斜体</em><br>  <strong>粗体</strong><br>   <em><strong>斜粗体</strong></em></p><h2 id="链接和图片"><a href="#链接和图片" class="headerlink" title="链接和图片"></a>链接和图片</h2><p>在Markdown中，可以使用中括号和圆括号来表示链接和图片。例如：</p><p><code>这是一个[链接](https://www.baidu.com/)</code>，<code>这是一张图片：![图片](https://dogefs.s3.ladydaily.com/~/source/wallhaven/small/zx/zxggjg.jpg?w=400&amp;h=200&amp;fmt=webp)</code><br>可以得到以下效果：<br>这是一个<a href="https://www.baidu.com/">链接</a><br>这是一张图片：<img src="https://dogefs.s3.ladydaily.com/~/source/wallhaven/small/zx/zxggjg.jpg?w=400&h=200&fmt=webp" alt="图片"></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>在Markdown中，可以使用星号（*）或加号（+）或减号（-）来表示无序列表，使用数字和点号（.）来表示有序列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 无序列表1</span><br><span class="line">- 无序列表2</span><br><span class="line">    + 无序列表2.1</span><br><span class="line">    + 无序列表2.2</span><br><span class="line">1. 有序列表1</span><br><span class="line">2. 有序列表</span><br></pre></td></tr></table></figure><p>可以得到以下效果：</p><ul><li>无序列表1</li><li>无序列表2<ul><li>无序列表2.1</li><li>无序列表2.2</li></ul></li></ul><ol><li>有序列表1</li><li>有序列表</li></ol><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>在Markdown中，可以使用大于号（&gt;）来表示引用。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一段引用的文字。</span><br></pre></td></tr></table></figure><p>可以得到以下效果：</p><blockquote><p>这是一段引用的文字。<br>代码块<br>在Markdown中，可以使用反引号（&#96;）来表示单行代码块，使用三个反引号（&#96;&#96;&#96;）来表示多行代码块。例如：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一行代码：`print(&quot;Hello, world!&quot;)`</span><br></pre></td></tr></table></figure><p>可以得到以下效果：<br>这是一行代码：<code>print(&quot;Hello, world!&quot;)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">这是一段代码：</span><br><span class="line">//``` </span><br><span class="line">    for i in range(10):</span><br><span class="line">    print(i)</span><br><span class="line">```//</span><br><span class="line">可以得到以下效果：</span><br></pre></td></tr></table></figure><pre><code>for i in range(10):print(i)</code></pre><pre><code>以上就是Markdown语法的基本内容，希望对大家有所帮助。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装文档(一)</title>
      <link href="/2023/04/27/%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A31/"/>
      <url>/2023/04/27/%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A31/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>   <strong>在互联网时代，拥有属于自己的个人博客早已不再是一项高大上的事情，而是成为越来越多人的选择。个人博客可以用来记录生活、分享经验，也可以成为展示自己作品的平台，那么该如何制作一个属于自己的个人博客呢？</strong></p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="选择博客搭建工具"><a href="#选择博客搭建工具" class="headerlink" title="选择博客搭建工具"></a>选择博客搭建工具</h2><p>搭建个人博客需要一个可靠的工具，目前比较流行的搭建工具有<strong>Jekyll</strong>、<strong>Hexo</strong>和<strong>WordPress</strong>等。</p><p>这里我选择使用Hexo进行搭建。<br><strong><a href="https://hexo.io/zh-cn/index.html">Hexo</a></strong></p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>   Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。<br>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。<br><strong><a href="https://git-scm.com/">Git</a></strong></p><h2 id="注册Github账号或者Gitee账户"><a href="#注册Github账号或者Gitee账户" class="headerlink" title="注册Github账号或者Gitee账户"></a>注册Github账号或者Gitee账户</h2><p><strong>Github</strong>是一个代码托管平台，也可以用来搭建个人博客。注册Github账号，然后创建一个新的仓库，将仓库命名为”你的用户名.github.io”，这个仓库将用来存储博客的内容。<br><strong>Gitee</strong>是国内的不卡，github（走梯子才能快）通过多年的累计和扶持，gitee已经比较成熟，gitee全面支持中文，非常棒，不再需要右键谷歌机器翻译了。<br><strong>具体步骤跟github差不多</strong></p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p> 首先新建一个文件夹命名为<strong>hexo</strong>用于存储自己的博客，在文件里<strong>鼠标右键点击Git Bash Here</strong>打开命令框然后使用npm来安装Hexo。在电脑终端中依次输入以下命令：</p><pre><code>安装命令</code></pre><p><code>npm install hexo-cli -g</code></p><pre><code>配置命令</code></pre><p>   <code>hexo init blog</code><br>   <code>cd blog</code><br>   <code>npm install</code></p><pre><code>运行命令</code></pre><p>   <code>hexo s</code></p><pre><code>全部命令代码</code></pre>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server </span><br></pre></td></tr></table></figure><p>安装完成后输入：<br>   <code>hexo g</code><br>   <code>hexo s</code><br>打开底部生成的链接即可进入博客页面。</p>]]></content>
      
      
      <categories>
          
          <category> 博客制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客制作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装文档(三)</title>
      <link href="/2023/04/27/%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A33/"/>
      <url>/2023/04/27/%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A33/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>在安装和配置博客平台之后，你需要选择一个合适的主题。主题是你博客的外观和感觉。不同的博客平台支持不同的主题。</p><pre><code>你可以在博客平台的主题库中选择一个主题，也可以从第三方网站下载和安装主题。</code></pre><p>  一旦你选择了主题，你需要定制它以适合你的博客。你可以改变颜色、字体、排版和布局，添加自定义标志和页面和插件。</p><p><strong>我这里用的是 <a href="https://butterfly.js.org/">Butterfly</a></strong></p><h2 id="Butterfly"><a href="#Butterfly" class="headerlink" title="Butterfly"></a>Butterfly</h2><p><strong><font color=red  > hexo-theme-butterfly </font>是基于 <font style="background: LightGray"> hexo-theme-melody </font>的基础上进行开发的。</strong></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><strong>npm安装</strong></p><pre><code>此方法只支持 Hexo 5.0.0 以上版本</code></pre><p>在你的 Hexo 根目录里运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p>升级方法：在 Hexo 根目录下，运行 <code>npm update hexo-theme-butterfly</code></p><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><p><strong>修改 Hexo 根目录下的<font color=red  > _config.yml </font> ，把主题改为<font color=red  >butterfly </font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h3><p><strong>在 hexo 的根目录创建一个文件 <font color=red  > _config.butterfly.yml </font>，并把主题目录的 <font color=red  > _config.yml </font> 内容复制到 <font color=red  > _config.butterfly.yml </font> 去。( 注意: 复制的是主题的 <font color=red  > _config.yml </font> ，而不是 hexo 的 <font color=red  > _config.yml </font>)</strong></p><pre><code>注意： 不要把主题目录的 _config.yml删掉</code></pre><p><strong>注意： 以后只需要在 <font color=red  > _config.butterfly.yml </font> 进行配置就行。</strong><br><strong>如果使用了<font color=red  > _config.butterfly.yml </font>， 配置主题的 <font color=red  > _config.yml </font> 将不会有效果</strong></p><p>Hexo会自动合併主题中的 <font color=red  > _config.yml </font> 和 <font color=red  > _config.butterfly.yml </font> 里的配置，如果存在同名配置，会使用 <font color=red  > _config.butterfly.yml </font> 的配置，其优先度较高。<br><img src="https://file.crazywong.com/gh/jerryc127/CDN/img/butterfly-docs-install-suggestion-1.png"></p><h2 id="主题配置详情请前往Butterfly-官网查看"><a href="#主题配置详情请前往Butterfly-官网查看" class="headerlink" title="主题配置详情请前往Butterfly 官网查看"></a>主题配置详情请前往<a href="https://butterfly.js.org/">Butterfly</a> 官网查看</h2>]]></content>
      
      
      <categories>
          
          <category> 博客制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客制作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装文档(二)</title>
      <link href="/2023/04/27/%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A32/"/>
      <url>/2023/04/27/%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A32/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="配置hexo"><a href="#配置hexo" class="headerlink" title="配置hexo"></a>配置hexo</h2><p><strong>打开hexo&#x2F;blog路径下的<font color=red>_config.yml</font>文件</strong><br>进行以下配置：<br> <code>  title: MzlxH  </code> 这里为标题 我的是MzlxH<br> <code>  subtitle: &#39;&#39;</code><br> <code>  description: &#39;&#39;</code><br> <code>   keywords:</code><br> <code>  author: </code><br> <code>  language: zh-CN</code> 这里为语言<br><code>   timezone: &#39;&#39;</code></p><h2 id="配置文章"><a href="#配置文章" class="headerlink" title="配置文章"></a>配置文章</h2><pre><code>在**Git Bash Here**命令框输入：</code></pre><p><code>hexo new &quot;文章名&quot;</code><br><strong>打开<font color=blue>hexo\blog\source_posts</font>路径</strong>这里是存放文章的目录。</p><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p>Front-matter 是 markdown 文件最上方以 — 分隔的区域，用于指定个别档案的变数。</p><pre><code>Page Front-matter 用于页面配置Post Front-matter 用于文章页配置</code></pre><h3 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top_img:</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">aside:</span><br><span class="line">aplayer:</span><br><span class="line">highlight_shrink:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">写法</th><th>解释</th></tr></thead><tbody><tr><td align="left">title</td><td>【必需】页面标题</td></tr><tr><td align="left">date</td><td>【必需】页面创建日期</td></tr><tr><td align="left">type</td><td>【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td align="left">updated</td><td>【可选】页面更新日期</td></tr><tr><td align="left">description</td><td>【可选】页面描述</td></tr><tr><td align="left">keywords</td><td>【可选】页面关键字</td></tr><tr><td align="left">comments</td><td>【可选】显示页面评论模块 (默认 true)</td></tr><tr><td align="left">top_img</td><td>【可选】页面顶部图片</td></tr><tr><td align="left">mathjax</td><td>【可选】显示mathjax (当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td align="left">katex</td><td>【可选】显示katex (当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td align="left">aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td align="left">aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td align="left">highlight_shrink</td><td>【可选】配置代码框是否展开 (true&#x2F;false) (默认为设置中highlight_shrink的配置)</td></tr><tr><td align="left"><strong><font color=Pink>根据需求进行配置</font></strong></td><td></td></tr></tbody></table><h3 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img:</span><br><span class="line">comments:</span><br><span class="line">cover:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">写法</th><th>解释</th></tr></thead><tbody><tr><td align="left">title</td><td>【必需】文章标题</td></tr><tr><td align="left">date</td><td>【必需】文章创建日期</td></tr><tr><td align="left">updated</td><td>【可选】文章更新日期</td></tr><tr><td align="left">tags</td><td>【可选】文章标签</td></tr><tr><td align="left">categories</td><td>【可选】文章分类</td></tr><tr><td align="left">description</td><td>【可选】文章描述</td></tr><tr><td align="left">keywords</td><td>【可选】文章关键字</td></tr><tr><td align="left">top_img</td><td>【可选】文章顶部图片</td></tr><tr><td align="left">cover</td><td>【可选】显示文章评论模块(默认 true)</td></tr><tr><td align="left">comments</td><td>【可选】显示页面评论模块 (默认 true)</td></tr><tr><td align="left"><strong><font color=Pink>根据需求进行配置文章</font></strong></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 博客制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客制作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装文档(四)</title>
      <link href="/2023/04/27/%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A34/"/>
      <url>/2023/04/27/%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A34/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="部署到Gitee或者Github"><a href="#部署到Gitee或者Github" class="headerlink" title="部署到Gitee或者Github"></a>部署到Gitee或者Github</h1><p><strong>准备工作</strong></p><ul><li>安装软件：node.js 和 git</li><li>注册 gitee &#x2F;github</li></ul><h2 id="部署到Gitee"><a href="#部署到Gitee" class="headerlink" title="部署到Gitee"></a>部署到Gitee</h2><h3 id="到gitee新建仓库："><a href="#到gitee新建仓库：" class="headerlink" title="到gitee新建仓库："></a>到gitee新建仓库：</h3><p><img src="/img/wd41.png"></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>在<font style="background: LightGray"> git Bash Here </font>中输入下面的两个命令进行配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//参考</span><br><span class="line">$ git config --globale user.name &quot;gitee空间地址&quot;   //gitee用户名</span><br><span class="line">$ git config --globale user.email &quot;xxx@qq.com&quot;  //你注册gitee的邮箱</span><br></pre></td></tr></table></figure><h3 id="SSH配置"><a href="#SSH配置" class="headerlink" title="SSH配置"></a>SSH配置</h3><ol><li><p>本地生成秘钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;your name&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>默认生成秘钥key在C:\Users\电脑用户名.ssh文件夹下。</p></li><li><p>添加本地秘钥到Gitee<br><img src="/img/wd42.png"><br>在个人设置里，点击SSH公钥，添加公钥，标题自己随便选，公钥就是本地生成的id_rsa.pub里面的内容。</p><p> 检查下配置是否成功。</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><ol><li>配置发布地址<br>在hexo初始化的blog的配置文件<font color=red>_config.yml</font>中配置<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repository: git@gitee.com:&#123;注册的个人空间地址&#125;/&#123;仓库名&#125;.git</span><br><span class="line">  branch: master //仓库分支</span><br></pre></td></tr></table></figure></li><li>生成静态文件进行发布<blockquote><p>到你本地hexo init blog初始化生成的blog文件夹里，打开Git Base命令窗口。</p></blockquote></li><li>清除缓存文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li><li>生成静态文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></li><li>文件生成后立即部署网站<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>这个时候本地的内容就部署到了Gitee上了。</li></ol><h3 id="Gitee-Pages更新内容"><a href="#Gitee-Pages更新内容" class="headerlink" title="Gitee Pages更新内容*"></a>Gitee Pages更新内容*</h3><p><img src="/img/wd43.png"><br>点击更新，然后就可以通过<font style="background: LightGray"> https:&#x2F;&#x2F;{你的个人空间地址}.gitee.io（仓库名跟个人空间地址一致） </font>或者<font style="background: LightGray">https:&#x2F;&#x2F;{你的个人空间地址}.gitee.io&#x2F;{你的仓库名}（仓库名跟个人空间地址不一致）</font>访问你的网站了。</p><pre><code>          至此，你的Hexo到Gitee的部署就实现了！</code></pre><h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><h3 id="到github新建仓库："><a href="#到github新建仓库：" class="headerlink" title="到github新建仓库："></a>到github新建仓库：</h3><p>跟<strong>gitee</strong>方式差不多<br><img src="/img/wd44.png"></p><blockquote><p>要创建一个和你用户名相同的仓库，后面加.[<a href="http://github.io,只有这样,将来要部署到github/">http://github.io，只有这样，将来要部署到GitHub</a> page的时候，才会被识别，也就是<a href="http://xxxx.github.io，其中xxx就是你注册GitHub的用户名。例如我的：http://mzlxh.github.io">http://xxxx.github.io，其中xxx就是你注册GitHub的用户名。例如我的：http://mzlxh.github.io</a></p></blockquote><h3 id="SSH配置-1"><a href="#SSH配置-1" class="headerlink" title="SSH配置"></a>SSH配置</h3><p>生成SSH添加到GitHub，连接Github与本地。<br>右键打开git bash，然后输入下面命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>然后创建SSH,一路回车<br>继续输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。或者git bash中输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>打开github，在头像下面点击<strong>settings</strong>，再点击SSH and GPG keys，新建一个SSH，名字随便取一个都可以，把你的id_rsa.pub里面的信息复制进去。如图：<br><img src="/img/wd45.png"><br>在<code>git bash</code>输入<code>ssh -T git@github.com</code>，出现你的用户名，那就成功了。</p><h3 id="将hexo部署到GitHub"><a href="#将hexo部署到GitHub" class="headerlink" title="将hexo部署到GitHub"></a>将hexo部署到GitHub</h3><p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。</p><p>修改最后一行的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/gaoziman/gaoziman.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。 <code>hexo generate</code>顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写 ，<code>hexo deploy</code>部署文章，可以用<code>hexo d</code>缩写</p><blockquote><p>注意deploy时可能要你输入<code>username</code>和<code>password</code>。</p></blockquote><p>过一会儿就可以在<a href="http://yourname.github.io/">http://yourname.github.io</a> 这个网站看到你的博客了！</p>]]></content>
      
      
      <categories>
          
          <category> 博客制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客制作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/04/26/hello-world/"/>
      <url>/2023/04/26/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
